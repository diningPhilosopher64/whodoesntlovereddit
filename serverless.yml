# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: whodoesntlovereddit

frameworkVersion: "2"
# projectDir: ./

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  memorySize: 256
  region: ap-south-1
  stage: ${opt:stage, 'dev'}
  profile: whodoesntlovereddit
  environment:
    DAILY_UPLOADS_TABLE_NAME: ${self:custom.DailyUploadsTable.name}
    REDDIT_ACCOUNTS_TABLE_NAME: ${self:custom.RedditAccountsTable.name}
    REDDIT_AUTH_URL: 'https://www.reddit.com/api/v1/access_token'
    REDDIT_API_URL_TOP: 'https://oauth.reddit.com/r/placeholder_value/top'
    DAILY_UPLOADS_GATHER_POSTS_FOR_A_SUBREDDIT_QUEUE_URL: ${self:custom.DailyUploadsGatherPostsForASubredditQueue.name}  
    # DAILY_UPLOADS_DOWNLOAD_POSTS_FOR_A_SUBREDDIT_QUEUE_URL: ${self:custom.DailyUploadsDownloadPostsForASubredditQueue.name}  
    DAILY_UPLOADS_PROCESS_SUBREDDITS_GROUP_QUEUE_URL: ${self:custom.DailyUploadsProcessSubredditsGroupQueue.name}  


  ecr:
    images:
      # firstImage:
      #   path: lambdas/first_lambda_container/

      daily_uploads:
        path: images/

plugins:
  - serverless-iam-roles-per-function

package:
  individually: true
  patterns:
    - '!.venv/**'
    - '!node_modules/**'
    - '!scripts/**'
    - 'lib/'    
    - '!README.txt'
    - '!copy_tree.py'
    - '!**/*.ipynb'
    # - 'lambdas/check_for_new_subreddits/subredditList.py'

resources:
  Resources:
    VideoUrlsTable: ${file(resources/Tables/VideoUrlsTable.yml):VideoUrlsTable}
    DailyUploadsTable: ${file(resources/Tables/DailyUploadsTable.yml):DailyUploadsTable}
    RedditAccountsTable: ${file(resources/Tables/RedditAccountsTable.yml):RedditAccountsTable}
    DailyUploadsGatherPostsForASubredditQueue: ${file(resources/Queues/daily_uploads/GatherPostsForASubreddit.yml):resource}
    # DailyUploadsDownloadPostsForASubredditQueue: ${file(resources/Queues/daily_uploads/DownloadPostsForASubreddit.yml):resource}
    DailyUploadsProcessSubredditsGroupQueue: ${file(resources/Queues/daily_uploads/ProcessSubredditsGroupQueue.yml):resource}

custom:
  DailyUploadsTable:
    name: !Ref DailyUploadsTable
    arn: !GetAtt DailyUploadsTable.Arn

  # VideoUrlsTable:
  #   name: !Ref VideoUrlsTable
  #   arn: !GetAtt VideoUrlsTable.Arn

  RedditAccountsTable:
    name: !Ref RedditAccountsTable
    arn: !GetAtt RedditAccountsTable.Arn

  DailyUploadsGatherPostsForASubredditQueue:
    name: !Ref DailyUploadsGatherPostsForASubredditQueue
    arn: !GetAtt DailyUploadsGatherPostsForASubredditQueue.Arn

  # DailyUploadsDownloadPostsForASubredditQueue:
  #   name: !Ref DailyUploadsDownloadPostsForASubredditQueue
  #   arn: !GetAtt DailyUploadsDownloadPostsForASubredditQueue.Arn
  
  DailyUploadsProcessSubredditsGroupQueue:
    name: !Ref DailyUploadsProcessSubredditsGroupQueue
    arn: !GetAtt DailyUploadsProcessSubredditsGroupQueue.Arn
  

functions:
  # - update_db_wakeup_ec2s: ${file(lambdas/update_db_wakeup_ec2s/generic.yml):function}
  - check_for_new_subreddits: ${file(lambdas/check_for_new_subreddits/generic.yml):function}
  # - pick_from_sqs_and_preprocess: ${file(lambdas/pick_from_sqs_and_preprocess/generic.yml):function}
  # - first_lambda_container: ${file(lambdas/first_lambda_container/generic.yml):function}
  - daily_uploads_gather_posts: ${file(lambdas/daily_uploads/gather_posts/generic.yml):function}
  - daily_uploads_process_subreddits_group: ${file(lambdas/daily_uploads/process_subreddits_group/generic.yml):function}
  # - daily_uploads_download_posts: ${file(lambdas/daily_uploads/download_posts/generic.yml):function}

 
