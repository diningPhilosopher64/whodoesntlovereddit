# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: whodoesntlovereddit

frameworkVersion: "2"
# projectDir: ./

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  memorySize: 256
  region: ap-south-1
  stage: ${opt:stage, 'dev'}
  profile: whodoesntlovereddit
  environment:
    DAILY_UPLOADS_TABLE_NAME: ${self:custom.DailyUploadsTable.name}
    VIDEO_URLS_TABLE_NAME: ${self:custom.VideoUrlsTable.name}
    REDDIT_ACCOUNTS_TABLE_NAME: ${self:custom.RedditAccountsTable.name}
    REDDIT_AUTH_URL: "https://www.reddit.com/api/v1/access_token"
    REDDIT_API_URL_NEW: "https://oauth.reddit.com/r/placeholder_value/new"
    DAILY_UPLOADS_GATHER_POSTS_FOR_A_SUBREDDIT_QUEUE_URL: ${self:custom.DailyUploadsGatherPostsForASubredditQueue.name}
    DAILY_UPLOADS_PROCESS_SUBREDDITS_GROUP_QUEUE_URL: ${self:custom.DailyUploadsProcessSubredditsGroupQueue.name}

    # Environment variables to launch instances
    AMI_ID: "ami-0a23ccb2cdd9286bb"
    # INSTANCE_TYPE: "c5.2xlarge"
    INSTANCE_TYPE: "c5a.4xlarge"
    KEY_NAME: "whodoesntlovereddit"
    REGION: "ap-south-1"

    # Environment variables for processing and rendering videos
    MAX_VIDEO_DURATION: 500
    TRANSITION_CLIPS_BUCKET: "whodoesntlovereddit-transitions"
    INTRO_VIDEO_CLIPS_BUCKET: "whodoesntlovereddit-intro-videoclips"
    OUTTRO_CLIPS_BUCKET: "whodoesntlovereddit-outtro"
    LIKE_AND_SUBSCRIBE_CLIPS_BUCKET: "whodoesntlovereddit-like-and-subscribe"
    AUDIO_CLIPS_BUCKET: "whodoesntlovereddit-audioclips"

  ecr:
    images:
      daily_uploads:
        path: images/

plugins:
  - serverless-iam-roles-per-function

package:
  individually: true
  patterns:
    - "!.venv/**"
    - "!node_modules/**"
    - "!scripts/**"
    - "lib/"
    - "!README.txt"
    - "!copy_tree.py"
    - "!**/*.ipynb"

resources:
  Resources:
    DailyUploadsTable: ${file(resources/Tables/DailyUploadsTable.yml):DailyUploadsTable}
    VideoUrlsTable: ${file(resources/Tables/VideoUrlsTable.yml):VideoUrlsTable}
    RedditAccountsTable: ${file(resources/Tables/RedditAccountsTable.yml):RedditAccountsTable}
    DailyUploadsGatherPostsForASubredditQueue: ${file(resources/Queues/daily_uploads/GatherPostsForASubreddit.yml):resource}
    DailyUploadsProcessSubredditsGroupQueue: ${file(resources/Queues/daily_uploads/ProcessSubredditsGroupQueue.yml):resource}

custom:
  DailyUploadsTable:
    name: !Ref DailyUploadsTable
    arn: !GetAtt DailyUploadsTable.Arn

  VideoUrlsTable:
    name: !Ref VideoUrlsTable
    arn: !GetAtt VideoUrlsTable.Arn

  RedditAccountsTable:
    name: !Ref RedditAccountsTable
    arn: !GetAtt RedditAccountsTable.Arn

  DailyUploadsGatherPostsForASubredditQueue:
    name: !Ref DailyUploadsGatherPostsForASubredditQueue
    arn: !GetAtt DailyUploadsGatherPostsForASubredditQueue.Arn

  DailyUploadsProcessSubredditsGroupQueue:
    name: !Ref DailyUploadsProcessSubredditsGroupQueue
    arn: !GetAtt DailyUploadsProcessSubredditsGroupQueue.Arn

functions:
  - check_for_new_subreddits: ${file(lambdas/check_for_new_subreddits/generic.yml):function}
  - daily_uploads_gather_posts: ${file(lambdas/daily_uploads/gather_posts/generic.yml):function}
  - daily_uploads_launch_instance: ${file(lambdas/daily_uploads/launch_instance/generic.yml):function}
  # - daily_uploads_process_subreddits_group: ${file(lambdas/daily_uploads/process_subreddits_group/generic.yml):function}
  # - daily_uploads_download_posts: ${file(lambdas/daily_uploads/download_posts/generic.yml):function}
